//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was 'partially' generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

extension ___VARIABLE_sceneName___ViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(segue: segue)
    }
}

// Connects View, Interactor, and Presenter
class ___VARIABLE_sceneName___Configurator {

    // MARK: - Properties

    weak var viewController: ___VARIABLE_sceneName___ViewController?
    weak var interactor: ___VARIABLE_sceneName___Interactor? {
        didSet {
            // Set interactor references
            interactor?.presenter = presenter
            // Set references to interactor
            viewController?.interactor = interactor
            router?.dataStore = interactor
        }
    }
    weak var presenter: ___VARIABLE_sceneName___Presenter? {
        didSet {
            // Set presenter references
            presenter?.viewController = viewController
            // Set references to presenter
            interactor?.presenter = presenter
        }
    }
    weak var router: ___VARIABLE_sceneName___Router? {
        didSet {
            // Set router references
            router?.viewController = viewController
            router?.dataStore = interactor
            // Set references to router
            viewController?.router = router
        }
    }
    weak var worker: ___VARIABLE_sceneName___Worker? {
        didSet {
            // Set worker references
            // TODO: Is there a possibility to add some sort of manager abstraction here, probably not.
            // Set references to worker
            interactor?.worker = worker
        }
    }

    // MARK: - Singleton properties and methods

    static let sharedInstance = ___VARIABLE_sceneName___Configurator()

    private init() {}

    // MARK: - Configuration

    func configure(_ viewController: ___VARIABLE_sceneName___ViewController) {
        // Instantiate components.
        let presenter = ___VARIABLE_sceneName___Presenter()
        let worker = ___VARIABLE_sceneName___Worker()
        let interactor = ___VARIABLE_sceneName___Interactor()
        let router = ___VARIABLE_sceneName___Router()

        // Set configurator variables and connect them.
        self.viewController = viewController
        self.worker = worker
        self.presenter = presenter
        self.interactor = interactor
        self.router = router
    }
}
