//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was 'partially' generated by the 'Component Based Clean Swift Templates' created by Jovan Radivojsa (a.k.a. joxoleon),
//  Based on the clean swift templates created by Raymond Law: http://clean-swift.com
//

import UIKit

protocol ___VARIABLE_sceneName___BusinessLogic: BusinessLogic {
    // func doSomething(_ request: ___VARIABLE_sceneName___.Something.Request)
}

protocol ___VARIABLE_sceneName___DataStore: DataStore {
    // var name: String { get set }
}

class ___VARIABLE_sceneName___Interactor: BaseInteractor, ___VARIABLE_sceneName___BusinessLogic, ___VARIABLE_sceneName___DataStore {

    // MARK: - Scene Component Properties
    var presenter: ___VARIABLE_sceneName___PresentationLogic? {
        return basePresenter as? ___VARIABLE_sceneName___PresentationLogic
    }
    var worker: ___VARIABLE_sceneName___Worker? {
        return baseWorker as? ___VARIABLE_sceneName___Worker
    }

    // MARK: - Properties
    // var name: String

    // MARK: - Receive data from child scene

    override func onBaseChildViewControllerClosing(childDataStore: DataStore) {
        // Receive data from child data store
    }

    // MARK: - Business Logic

    // func doSomething(_ request: Home.Something.Request) {
    //     worker.doSomeWork()
    //     presenter?.presentSomething(TestScene.Something.Response())
    // }

    // MARK: - Utility Methods

    // func isSomethingSomething() -> Bool { return true }
}
